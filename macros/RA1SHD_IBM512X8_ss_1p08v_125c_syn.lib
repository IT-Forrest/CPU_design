/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2016  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM Generator
 *           			IBM CMRF8SF-RVT Process
 *      version:		2009Q1V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_IBM512X8" -words 512 -bits 8 -frequency 100 -ring_width 3.0 -mux 8 -write_mask off -wp_size 8 -top_layer met4 -power_type rings -horiz met2 -vert met3 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -asvm on -libname "RA1SHD_IBM512X8" -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   RA1SHD_IBM512X8
 *      Instance Name:  RA1SHD_IBM512X8
 *      Words:          512
 *      Word Width:     8
 *      Mux:            8
 *      Corner:        ss_1p08v_125c
 *
 *      Creation Date:  2016-04-15 21:52:24Z
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(RA1SHD_IBM512X8) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2016-04-15 21:52:24Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2016 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.080;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.500;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1.000;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.000;
	k_temp_cell_rise		: 0.000;
	k_temp_hold_fall                : 0.000;
	k_temp_hold_rise                : 0.000;
	k_temp_min_pulse_width_high     : 0.000;
	k_temp_min_pulse_width_low      : 0.000;
	k_temp_min_period               : 0.000;
	k_temp_rise_propagation         : 0.000;
	k_temp_fall_propagation         : 0.000;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.000;
	k_temp_recovery_rise            : 0.000;
	k_temp_setup_fall               : 0.000;
	k_temp_setup_rise               : 0.000;
	k_volt_cell_fall                : 0.000;
	k_volt_cell_rise                : 0.000;
	k_volt_hold_fall                : 0.000;
	k_volt_hold_rise                : 0.000;
	k_volt_min_pulse_width_high     : 0.000;
	k_volt_min_pulse_width_low      : 0.000;
	k_volt_min_period               : 0.000;
	k_volt_rise_propagation         : 0.000;
	k_volt_fall_propagation         : 0.000;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.000;
	k_volt_recovery_rise            : 0.000;
	k_volt_setup_fall               : 0.000;
	k_volt_setup_rise               : 0.000;


        operating_conditions(ss_1p08v_125c) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.080;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : ss_1p08v_125c;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
        lu_table_template(RA1SHD_IBM512X8_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RA1SHD_IBM512X8_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RA1SHD_IBM512X8_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_IBM512X8_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_IBM512X8_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_IBM512X8_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_IBM512X8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_clkslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_sigslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_load) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_clkslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_sigslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_IBM512X8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_IBM512X8_UPM) {
		base_type : array ;
		data_type : bit ;
		bit_width : 3;
		bit_from : 2;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_IBM512X8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 9;
		bit_from : 8;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_IBM512X8) {
	area		 : 30892.108;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 9;
		word_width : 8;
	}
        bus(Q)   {
                bus_type : RA1SHD_IBM512X8_DATA;
		direction : output;
		max_capacitance : 0.960;
                memory_read() {
			address : A;
		}
                timing() {
                        related_pin :   "CLK" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(RA1SHD_IBM512X8_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ( \
                          "1.704, 1.725, 1.746, 1.809, 1.913, 2.122, 2.507", \
                          "1.713, 1.734, 1.754, 1.817, 1.922, 2.131, 2.515", \
                          "1.723, 1.744, 1.765, 1.828, 1.932, 2.141, 2.526", \
                          "1.744, 1.765, 1.786, 1.849, 1.953, 2.162, 2.547", \
                          "1.807, 1.828, 1.849, 1.912, 2.016, 2.225, 2.610", \
                          "1.912, 1.933, 1.954, 2.017, 2.121, 2.330, 2.715", \
                          "2.018, 2.038, 2.059, 2.122, 2.227, 2.435, 2.820" \
                        )
                        }
                        rise_transition(RA1SHD_IBM512X8_mem_out_slew_template) {
                        index_1 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ("0.075, 0.117, 0.159, 0.285, 0.495, 0.916, 1.690")
                        }
                        cell_fall(RA1SHD_IBM512X8_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ( \
                          "1.732, 1.754, 1.775, 1.839, 1.945, 2.158, 2.550", \
                          "1.741, 1.762, 1.783, 1.847, 1.954, 2.167, 2.559", \
                          "1.751, 1.773, 1.794, 1.858, 1.964, 2.177, 2.569", \
                          "1.772, 1.794, 1.815, 1.879, 1.985, 2.198, 2.590", \
                          "1.836, 1.857, 1.878, 1.942, 2.048, 2.261, 2.653", \
                          "1.941, 1.962, 1.983, 2.047, 2.154, 2.367, 2.758", \
                          "2.046, 2.067, 2.088, 2.152, 2.259, 2.472, 2.863" \
                        )
                        }
                        fall_transition(RA1SHD_IBM512X8_mem_out_slew_template) {
                        index_1 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ("0.097, 0.137, 0.177, 0.296, 0.495, 0.893, 1.624")
                        }
                }
        }
        pin(CLK)   {
		direction : input;
		capacitance : 0.145;
                clock : true;
                max_transition : 1.500;
                min_pulse_width_high : 0.126 ;
                min_pulse_width_low  : 0.267 ;
                min_period           : 1.987 ;


                internal_power(){
                        when : "(!CEN & ! \
                                 (WEN) \
                                ) \
                                 ";
                        rise_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("18.225, 18.225")
                        }
                        fall_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){
                        when : "(!CEN & \
                                 (WEN) \
                                ) \
                                 ";
                        rise_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("16.310, 16.310")
                        }
                        fall_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CEN)";
                        rise_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.345, 0.345")
                        }
                        fall_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CEN)   {
                direction : input;
                capacitance : 0.006;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.584, 0.591, 0.599, 0.616, 0.665, 0.748, 0.831", \
                          "0.576, 0.582, 0.591, 0.607, 0.657, 0.740, 0.823", \
                          "0.565, 0.572, 0.580, 0.597, 0.646, 0.729, 0.812", \
                          "0.544, 0.551, 0.559, 0.576, 0.625, 0.708, 0.791", \
                          "0.481, 0.488, 0.496, 0.513, 0.562, 0.645, 0.728", \
                          "0.376, 0.383, 0.391, 0.407, 0.457, 0.540, 0.623", \
                          "0.271, 0.277, 0.286, 0.302, 0.352, 0.435, 0.518" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.455, 0.462, 0.470, 0.487, 0.537, 0.621, 0.704", \
                          "0.447, 0.453, 0.462, 0.478, 0.529, 0.612, 0.696", \
                          "0.436, 0.443, 0.451, 0.468, 0.518, 0.602, 0.685", \
                          "0.415, 0.422, 0.430, 0.447, 0.497, 0.581, 0.664", \
                          "0.352, 0.359, 0.367, 0.384, 0.434, 0.518, 0.601", \
                          "0.247, 0.254, 0.262, 0.279, 0.329, 0.412, 0.496", \
                          "0.142, 0.148, 0.157, 0.173, 0.224, 0.307, 0.391" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.093, 0.086, 0.078, 0.061, 0.012, 0.000, 0.000", \
                          "0.198, 0.191, 0.183, 0.167, 0.117, 0.034, 0.000" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.069, 0.063, 0.054, 0.038, 0.000, 0.000, 0.000" \
                        )
                        }
               }
        }
        pin(WEN){
                direction : input;
                capacitance : 0.010;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.430, 0.436, 0.443, 0.458, 0.501, 0.573, 0.645", \
                          "0.422, 0.428, 0.435, 0.449, 0.493, 0.565, 0.637", \
                          "0.411, 0.417, 0.424, 0.439, 0.482, 0.554, 0.627", \
                          "0.390, 0.396, 0.403, 0.418, 0.461, 0.533, 0.606", \
                          "0.327, 0.333, 0.340, 0.355, 0.398, 0.470, 0.542", \
                          "0.222, 0.228, 0.235, 0.250, 0.293, 0.365, 0.437", \
                          "0.117, 0.123, 0.130, 0.144, 0.188, 0.260, 0.332" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.530, 0.536, 0.545, 0.561, 0.611, 0.693, 0.776", \
                          "0.521, 0.528, 0.536, 0.553, 0.602, 0.685, 0.767", \
                          "0.511, 0.517, 0.526, 0.542, 0.592, 0.674, 0.757", \
                          "0.490, 0.496, 0.505, 0.521, 0.571, 0.653, 0.736", \
                          "0.427, 0.433, 0.442, 0.458, 0.508, 0.590, 0.673", \
                          "0.322, 0.328, 0.336, 0.353, 0.402, 0.485, 0.568", \
                          "0.216, 0.223, 0.231, 0.248, 0.297, 0.380, 0.462" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
               }
        }
        bus(A)   {
                bus_type : RA1SHD_IBM512X8_ADDRESS;
                direction : input;
                capacitance : 0.029;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.518, 0.521, 0.524, 0.531, 0.552, 0.587, 0.622", \
                          "0.510, 0.512, 0.516, 0.523, 0.544, 0.579, 0.614", \
                          "0.499, 0.502, 0.505, 0.512, 0.533, 0.568, 0.603", \
                          "0.478, 0.481, 0.484, 0.491, 0.512, 0.547, 0.582", \
                          "0.415, 0.418, 0.421, 0.428, 0.449, 0.484, 0.519", \
                          "0.310, 0.313, 0.316, 0.323, 0.344, 0.379, 0.414", \
                          "0.205, 0.207, 0.211, 0.218, 0.239, 0.274, 0.309" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.305, 0.310, 0.316, 0.327, 0.363, 0.422, 0.481", \
                          "0.297, 0.301, 0.307, 0.319, 0.354, 0.413, 0.472", \
                          "0.286, 0.291, 0.297, 0.309, 0.344, 0.403, 0.462", \
                          "0.265, 0.270, 0.276, 0.288, 0.323, 0.382, 0.441", \
                          "0.202, 0.207, 0.213, 0.224, 0.260, 0.319, 0.378", \
                          "0.097, 0.102, 0.107, 0.119, 0.155, 0.214, 0.273", \
                          "-0.008, -0.004, 0.002, 0.014, 0.049, 0.108, 0.167" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.007, 0.004, 0.001, 0.000, 0.000, 0.000, 0.000", \
                          "0.028, 0.025, 0.022, 0.015, 0.000, 0.000, 0.000", \
                          "0.091, 0.088, 0.085, 0.078, 0.057, 0.022, 0.000", \
                          "0.196, 0.193, 0.190, 0.183, 0.162, 0.127, 0.092", \
                          "0.301, 0.299, 0.295, 0.288, 0.267, 0.232, 0.197" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.008, 0.004, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.071, 0.067, 0.061, 0.049, 0.014, 0.000, 0.000", \
                          "0.177, 0.172, 0.166, 0.154, 0.119, 0.060, 0.001", \
                          "0.282, 0.277, 0.271, 0.259, 0.224, 0.165, 0.106" \
                        )
                        }
               }
                internal_power(){
                        when : "CEN";
                        rise_power(RA1SHD_IBM512X8_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.235, 0.235")
                        }
                        fall_power(RA1SHD_IBM512X8_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.235, 0.235")
                        }
                }
        }
        bus(D)   {
                bus_type : RA1SHD_IBM512X8_DATA;
                memory_write() {
                        address : A;
                        clocked_on : "CLK";
                }
                direction : input;
                capacitance : 0.002;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.331, 0.336, 0.341, 0.353, 0.387, 0.445, 0.502", \
                          "0.323, 0.327, 0.333, 0.345, 0.379, 0.436, 0.494", \
                          "0.312, 0.317, 0.323, 0.334, 0.368, 0.426, 0.483", \
                          "0.291, 0.296, 0.302, 0.313, 0.347, 0.405, 0.462", \
                          "0.228, 0.233, 0.238, 0.250, 0.284, 0.342, 0.399", \
                          "0.123, 0.128, 0.133, 0.145, 0.179, 0.237, 0.294", \
                          "0.018, 0.022, 0.028, 0.040, 0.074, 0.131, 0.189" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.220, 0.227, 0.236, 0.253, 0.305, 0.391, 0.478", \
                          "0.212, 0.219, 0.228, 0.245, 0.297, 0.383, 0.469", \
                          "0.201, 0.208, 0.217, 0.234, 0.286, 0.372, 0.459", \
                          "0.180, 0.187, 0.196, 0.213, 0.265, 0.351, 0.438", \
                          "0.117, 0.124, 0.133, 0.150, 0.202, 0.288, 0.375", \
                          "0.012, 0.019, 0.028, 0.045, 0.097, 0.183, 0.270", \
                          "-0.093, -0.086, -0.077, -0.060, -0.008, 0.078, 0.164" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.008, 0.003, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.113, 0.108, 0.103, 0.091, 0.057, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.015, 0.008, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.120, 0.113, 0.105, 0.088, 0.036, 0.000, 0.000", \
                          "0.225, 0.219, 0.210, 0.193, 0.141, 0.055, 0.000" \
                        )
                        }
               }
        }

        cell_leakage_power : 3.41E-2;
}
}
