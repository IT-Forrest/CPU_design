/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2016  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM Generator
 *           			IBM CMRF8SF-RVT Process
 *      version:		2009Q1V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_IBM512X8" -words 512 -bits 8 -frequency 100 -ring_width 3.0 -mux 8 -write_mask off -wp_size 8 -top_layer met4 -power_type rings -horiz met2 -vert met3 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -asvm on -libname "RA1SHD_IBM512X8" -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   RA1SHD_IBM512X8
 *      Instance Name:  RA1SHD_IBM512X8
 *      Words:          512
 *      Word Width:     8
 *      Mux:            8
 *      Corner:        ff_1p65v_125c
 *
 *      Creation Date:  2016-04-15 21:52:23Z
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(RA1SHD_IBM512X8) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2016-04-15 21:52:23Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2016 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.650;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 0.750;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1.000;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.000;
	k_temp_cell_rise		: 0.000;
	k_temp_hold_fall                : 0.000;
	k_temp_hold_rise                : 0.000;
	k_temp_min_pulse_width_high     : 0.000;
	k_temp_min_pulse_width_low      : 0.000;
	k_temp_min_period               : 0.000;
	k_temp_rise_propagation         : 0.000;
	k_temp_fall_propagation         : 0.000;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.000;
	k_temp_recovery_rise            : 0.000;
	k_temp_setup_fall               : 0.000;
	k_temp_setup_rise               : 0.000;
	k_volt_cell_fall                : 0.000;
	k_volt_cell_rise                : 0.000;
	k_volt_hold_fall                : 0.000;
	k_volt_hold_rise                : 0.000;
	k_volt_min_pulse_width_high     : 0.000;
	k_volt_min_pulse_width_low      : 0.000;
	k_volt_min_period               : 0.000;
	k_volt_rise_propagation         : 0.000;
	k_volt_fall_propagation         : 0.000;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.000;
	k_volt_recovery_rise            : 0.000;
	k_volt_setup_fall               : 0.000;
	k_volt_setup_rise               : 0.000;


        operating_conditions(ff_1p65v_125c) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.650;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : ff_1p65v_125c;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
        lu_table_template(RA1SHD_IBM512X8_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RA1SHD_IBM512X8_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RA1SHD_IBM512X8_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_IBM512X8_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_IBM512X8_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_IBM512X8_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_IBM512X8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_clkslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_sigslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_load) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_clkslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
        power_lut_template(RA1SHD_IBM512X8_energy_template_sigslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_IBM512X8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_IBM512X8_UPM) {
		base_type : array ;
		data_type : bit ;
		bit_width : 3;
		bit_from : 2;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_IBM512X8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 9;
		bit_from : 8;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_IBM512X8) {
	area		 : 30892.108;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 9;
		word_width : 8;
	}
        bus(Q)   {
                bus_type : RA1SHD_IBM512X8_DATA;
		direction : output;
		max_capacitance : 0.960;
                memory_read() {
			address : A;
		}
                timing() {
                        related_pin :   "CLK" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(RA1SHD_IBM512X8_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ( \
                          "0.599, 0.608, 0.617, 0.645, 0.691, 0.784, 0.954", \
                          "0.602, 0.611, 0.621, 0.648, 0.695, 0.787, 0.957", \
                          "0.606, 0.615, 0.625, 0.652, 0.699, 0.791, 0.961", \
                          "0.614, 0.623, 0.632, 0.660, 0.706, 0.799, 0.969", \
                          "0.630, 0.639, 0.648, 0.676, 0.722, 0.815, 0.985", \
                          "0.646, 0.655, 0.664, 0.692, 0.738, 0.831, 1.001", \
                          "0.657, 0.667, 0.676, 0.704, 0.750, 0.843, 1.013" \
                        )
                        }
                        rise_transition(RA1SHD_IBM512X8_mem_out_slew_template) {
                        index_1 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ("0.041, 0.063, 0.085, 0.151, 0.261, 0.481, 0.886")
                        }
                        cell_fall(RA1SHD_IBM512X8_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ( \
                          "0.599, 0.608, 0.617, 0.645, 0.691, 0.784, 0.954", \
                          "0.602, 0.611, 0.621, 0.648, 0.695, 0.787, 0.957", \
                          "0.606, 0.615, 0.625, 0.652, 0.699, 0.791, 0.961", \
                          "0.614, 0.623, 0.632, 0.660, 0.706, 0.799, 0.969", \
                          "0.630, 0.639, 0.648, 0.676, 0.722, 0.815, 0.985", \
                          "0.646, 0.655, 0.664, 0.692, 0.738, 0.831, 1.001", \
                          "0.657, 0.667, 0.676, 0.704, 0.750, 0.843, 1.013" \
                        )
                        }
                        fall_transition(RA1SHD_IBM512X8_mem_out_slew_template) {
                        index_1 ("0.000, 0.025, 0.050, 0.125, 0.250, 0.500, 0.960");
                        values ("0.052, 0.075, 0.098, 0.167, 0.283, 0.514, 0.940")
                        }
                }
        }
        pin(CLK)   {
		direction : input;
		capacitance : 0.142;
                clock : true;
                max_transition : 0.750;
                min_pulse_width_high : 0.050 ;
                min_pulse_width_low  : 0.073 ;
                min_period           : 0.791 ;


                internal_power(){
                        when : "(!CEN & ! \
                                 (WEN) \
                                ) \
                                 ";
                        rise_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("46.641, 46.641")
                        }
                        fall_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){
                        when : "(!CEN & \
                                 (WEN) \
                                ) \
                                 ";
                        rise_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("42.392, 42.392")
                        }
                        fall_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CEN)";
                        rise_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.210, 0.210")
                        }
                        fall_power(RA1SHD_IBM512X8_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CEN)   {
                direction : input;
                capacitance : 0.006;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.227, 0.231, 0.236, 0.245, 0.264, 0.283, 0.297", \
                          "0.224, 0.228, 0.232, 0.242, 0.261, 0.280, 0.294", \
                          "0.220, 0.224, 0.229, 0.238, 0.257, 0.276, 0.290", \
                          "0.212, 0.216, 0.221, 0.230, 0.249, 0.268, 0.282", \
                          "0.196, 0.200, 0.205, 0.214, 0.233, 0.252, 0.266", \
                          "0.180, 0.184, 0.189, 0.198, 0.217, 0.236, 0.250", \
                          "0.169, 0.172, 0.177, 0.186, 0.205, 0.224, 0.238" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.145, 0.149, 0.154, 0.164, 0.184, 0.204, 0.218", \
                          "0.141, 0.145, 0.150, 0.160, 0.180, 0.200, 0.215", \
                          "0.138, 0.142, 0.147, 0.156, 0.176, 0.196, 0.211", \
                          "0.130, 0.134, 0.139, 0.149, 0.169, 0.188, 0.203", \
                          "0.114, 0.118, 0.123, 0.133, 0.153, 0.173, 0.188", \
                          "0.098, 0.102, 0.107, 0.117, 0.137, 0.157, 0.172", \
                          "0.086, 0.090, 0.095, 0.105, 0.125, 0.145, 0.160" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.019, 0.015, 0.010, 0.001, 0.000, 0.000, 0.000", \
                          "0.031, 0.027, 0.022, 0.013, 0.000, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
               }
        }
        pin(WEN){
                direction : input;
                capacitance : 0.010;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.160, 0.164, 0.168, 0.177, 0.196, 0.214, 0.227", \
                          "0.157, 0.161, 0.165, 0.174, 0.192, 0.211, 0.224", \
                          "0.153, 0.157, 0.161, 0.170, 0.188, 0.207, 0.220", \
                          "0.145, 0.149, 0.153, 0.162, 0.181, 0.199, 0.212", \
                          "0.129, 0.133, 0.138, 0.147, 0.165, 0.183, 0.196", \
                          "0.114, 0.117, 0.122, 0.131, 0.149, 0.167, 0.181", \
                          "0.102, 0.105, 0.110, 0.119, 0.137, 0.155, 0.169" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.198, 0.202, 0.207, 0.217, 0.236, 0.255, 0.270", \
                          "0.195, 0.199, 0.204, 0.214, 0.233, 0.252, 0.267", \
                          "0.191, 0.195, 0.200, 0.210, 0.229, 0.248, 0.263", \
                          "0.183, 0.187, 0.192, 0.202, 0.221, 0.240, 0.255", \
                          "0.167, 0.171, 0.176, 0.186, 0.205, 0.225, 0.239", \
                          "0.152, 0.155, 0.160, 0.170, 0.189, 0.209, 0.223", \
                          "0.140, 0.144, 0.148, 0.158, 0.178, 0.197, 0.211" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
               }
        }
        bus(A)   {
                bus_type : RA1SHD_IBM512X8_ADDRESS;
                direction : input;
                capacitance : 0.027;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.165, 0.166, 0.167, 0.169, 0.174, 0.179, 0.182", \
                          "0.162, 0.163, 0.164, 0.166, 0.171, 0.176, 0.179", \
                          "0.158, 0.159, 0.160, 0.162, 0.167, 0.172, 0.175", \
                          "0.150, 0.151, 0.152, 0.154, 0.159, 0.164, 0.167", \
                          "0.134, 0.135, 0.136, 0.138, 0.143, 0.148, 0.151", \
                          "0.118, 0.119, 0.120, 0.123, 0.127, 0.132, 0.136", \
                          "0.106, 0.107, 0.108, 0.111, 0.115, 0.120, 0.124" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.122, 0.125, 0.129, 0.137, 0.153, 0.169, 0.182", \
                          "0.119, 0.122, 0.126, 0.134, 0.150, 0.166, 0.178", \
                          "0.115, 0.118, 0.122, 0.130, 0.146, 0.162, 0.174", \
                          "0.107, 0.110, 0.114, 0.122, 0.138, 0.154, 0.166", \
                          "0.091, 0.094, 0.098, 0.106, 0.122, 0.139, 0.151", \
                          "0.075, 0.078, 0.082, 0.091, 0.107, 0.123, 0.135", \
                          "0.063, 0.067, 0.071, 0.079, 0.095, 0.111, 0.123" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.014, 0.013, 0.012, 0.010, 0.005, 0.000, 0.000", \
                          "0.017, 0.016, 0.015, 0.013, 0.008, 0.003, 0.000", \
                          "0.021, 0.020, 0.019, 0.017, 0.012, 0.007, 0.004", \
                          "0.029, 0.028, 0.027, 0.025, 0.020, 0.015, 0.012", \
                          "0.045, 0.044, 0.043, 0.041, 0.036, 0.031, 0.028", \
                          "0.061, 0.060, 0.059, 0.056, 0.052, 0.047, 0.043", \
                          "0.073, 0.072, 0.071, 0.068, 0.064, 0.059, 0.055" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.005, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.013, 0.010, 0.006, 0.000, 0.000, 0.000, 0.000", \
                          "0.029, 0.026, 0.022, 0.014, 0.000, 0.000, 0.000", \
                          "0.045, 0.042, 0.038, 0.030, 0.014, 0.000, 0.000", \
                          "0.057, 0.054, 0.050, 0.042, 0.025, 0.009, 0.000" \
                        )
                        }
               }
                internal_power(){
                        when : "CEN";
                        rise_power(RA1SHD_IBM512X8_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.645, 0.645")
                        }
                        fall_power(RA1SHD_IBM512X8_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.645, 0.645")
                        }
                }
        }
        bus(D)   {
                bus_type : RA1SHD_IBM512X8_DATA;
                memory_write() {
                        address : A;
                        clocked_on : "CLK";
                }
                direction : input;
                capacitance : 0.002;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.107, 0.109, 0.111, 0.116, 0.127, 0.137, 0.145", \
                          "0.103, 0.105, 0.108, 0.113, 0.124, 0.134, 0.142", \
                          "0.099, 0.102, 0.104, 0.109, 0.120, 0.130, 0.138", \
                          "0.092, 0.094, 0.096, 0.101, 0.112, 0.122, 0.130", \
                          "0.076, 0.078, 0.080, 0.086, 0.096, 0.107, 0.114", \
                          "0.060, 0.062, 0.065, 0.070, 0.080, 0.091, 0.099", \
                          "0.048, 0.050, 0.053, 0.058, 0.068, 0.079, 0.087" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.081, 0.085, 0.091, 0.103, 0.127, 0.150, 0.168", \
                          "0.078, 0.082, 0.088, 0.100, 0.124, 0.147, 0.165", \
                          "0.074, 0.078, 0.084, 0.096, 0.120, 0.143, 0.161", \
                          "0.066, 0.070, 0.076, 0.088, 0.112, 0.135, 0.153", \
                          "0.050, 0.055, 0.060, 0.072, 0.096, 0.119, 0.137", \
                          "0.034, 0.039, 0.045, 0.056, 0.080, 0.104, 0.121", \
                          "0.022, 0.027, 0.033, 0.045, 0.068, 0.092, 0.109" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.013, 0.011, 0.009, 0.003, 0.000, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(RA1SHD_IBM512X8_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.010, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.026, 0.021, 0.015, 0.003, 0.000, 0.000, 0.000", \
                          "0.038, 0.033, 0.027, 0.015, 0.000, 0.000, 0.000" \
                        )
                        }
               }
        }

        cell_leakage_power : 8.30E-1;
}
}
